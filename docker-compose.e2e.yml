version: '3'
services:
    api-gateway:
        build: 
            context: ./api-gateway
            dockerfile: Dockerfile
        container_name: "api-gateway"
        env_file: ./api-gateway/.env
        environment:
            - DOCKER_BUILD=true
        ports:
            - "8080:8080"
        networks:
            internal-network:
        depends_on:
            - api-service
            - ui-service

    api-service:
        build: 
            context: ./api-service
            dockerfile: Dockerfile
        container_name: "api-service"
        env_file: ./api-service/.env
        environment:
            - DOCKER_BUILD=true
        ports:
            - "3001:3001"
        networks:
            internal-network:
                aliases:
                    - api-service
        depends_on:
            - redis

    ui-service:
        build: 
            context: ./ui-service
            dockerfile: Dockerfile
        container_name: "ui-service"
        env_file: ./ui-service/.env
        environment:
            - DOCKER_BUILD=true
            - API_URL=http://api-service:3001
        ports:
            - "3000:3000"
        networks:
            internal-network:
                aliases:
                    - ui-service

    redis:
        image: redis:4.0.5-alpine
        command: ["redis-server", "--appendonly", "yes"]
        networks:
            internal-network:
                aliases:
                    - redis
        volumes:
            - redis-data:/data

    chromedriver:
        image: blueimp/chromedriver
        environment:
            - VNC_ENABLED=true
            - EXPOSE_X11=true
        ports:
            - 5900:5900
        networks:
            internal-network:
                aliases:
                    - chromedriver
    nightwatch:
        image: blueimp/nightwatch:0.9
        # init: true
        depends_on:
            - chromedriver
            - ui-service
        environment:
            - WAIT_FOR_HOSTS=ui-service:3000 chromedriver:4444 chromedriver:6060
        volumes:
            - ./e2e:/home/node
        networks:
            internal-network:
                aliases:
                    - nightwatch

# http://andrewtarry.com/docker_compose/ - more info about networking in docker-compose
networks:
    internal-network:
        driver: bridge

volumes:
  redis-data: