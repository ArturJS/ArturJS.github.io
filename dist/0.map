{"version":3,"file":"0.chunk.js","sources":["webpack:///./~/@ngrx/effects/index.js","webpack:///./~/@ngrx/effects/src/actions.js","webpack:///./~/@ngrx/effects/src/bootstrap-listener.js","webpack:///./~/@ngrx/effects/src/effects-subscription.js","webpack:///./~/@ngrx/effects/src/effects.js","webpack:///./~/@ngrx/effects/src/effects.module.js","webpack:///./~/@ngrx/effects/src/util.js","webpack:///./src/app/pages/notes-page/directives/stretch-by-content/stretch-by-content.directive.ts","webpack:///./src/app/pages/notes-page/note/note.component.ts","webpack:///./src/app/pages/notes-page/note/note.html","webpack:///./src/app/pages/notes-page/note/note.scss","webpack:///./src/app/pages/notes-page/notes-page.component.ts","webpack:///./src/app/pages/notes-page/notes-page.html","webpack:///./src/app/pages/notes-page/notes-page.module.ts","webpack:///./src/app/pages/notes-page/notes-page.reducer.ts","webpack:///./src/app/pages/notes-page/notes-page.routing.ts","webpack:///./src/app/pages/notes-page/notes-page.scss","webpack:///./src/app/pages/notes-page/notes.actions.ts","webpack:///./src/app/pages/notes-page/notes.effects.ts"],"sourcesContent":["export { Effect, mergeEffects } from './src/effects';\nexport { Actions } from './src/actions';\nexport { EffectsModule } from './src/effects.module';\nexport { EffectsSubscription } from './src/effects-subscription';\nexport { toPayload } from './src/util';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/index.js\n// module id = ./node_modules/@ngrx/effects/index.js\n// module chunks = 0","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Injectable, Inject } from '@angular/core';\nimport { Dispatcher } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { filter } from 'rxjs/operator/filter';\nexport var Actions = (function (_super) {\n    __extends(Actions, _super);\n    function Actions(actionsSubject) {\n        _super.call(this);\n        this.source = actionsSubject;\n    }\n    Actions.prototype.lift = function (operator) {\n        var observable = new Actions(this);\n        observable.operator = operator;\n        return observable;\n    };\n    Actions.prototype.ofType = function () {\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i - 0] = arguments[_i];\n        }\n        return filter.call(this, function (_a) {\n            var type = _a.type;\n            var len = keys.length;\n            if (len === 1) {\n                return type === keys[0];\n            }\n            else {\n                for (var i = 0; i < len; i++) {\n                    if (keys[i] === type) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        });\n    };\n    Actions.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Actions.ctorParameters = [\n        { type: Observable, decorators: [{ type: Inject, args: [Dispatcher,] },] },\n    ];\n    return Actions;\n}(Observable));\n//# sourceMappingURL=actions.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/actions.js\n// module id = ./node_modules/@ngrx/effects/src/actions.js\n// module chunks = 0","import { OpaqueToken } from '@angular/core';\nexport var afterBootstrapEffects = new OpaqueToken('ngrx:effects: Bootstrap Effects');\nexport function runAfterBootstrapEffects(injector, subscription) {\n    return function () {\n        var effectInstances = injector.get(afterBootstrapEffects, false);\n        if (effectInstances) {\n            subscription.addEffects(effectInstances);\n        }\n    };\n}\n//# sourceMappingURL=bootstrap-listener.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/bootstrap-listener.js\n// module id = ./node_modules/@ngrx/effects/src/bootstrap-listener.js\n// module chunks = 0","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OpaqueToken, Inject, SkipSelf, Optional, Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\nimport { merge } from 'rxjs/observable/merge';\nimport { mergeEffects } from './effects';\nexport var effects = new OpaqueToken('ngrx/effects: Effects');\nexport var EffectsSubscription = (function (_super) {\n    __extends(EffectsSubscription, _super);\n    function EffectsSubscription(store, parent, effectInstances) {\n        _super.call(this);\n        this.store = store;\n        this.parent = parent;\n        if (Boolean(parent)) {\n            parent.add(this);\n        }\n        if (Boolean(effectInstances)) {\n            this.addEffects(effectInstances);\n        }\n    }\n    EffectsSubscription.prototype.addEffects = function (effectInstances) {\n        var sources = effectInstances.map(mergeEffects);\n        var merged = merge.apply(void 0, sources);\n        this.add(merged.subscribe(this.store));\n    };\n    EffectsSubscription.prototype.ngOnDestroy = function () {\n        if (!this.closed) {\n            this.unsubscribe();\n        }\n    };\n    EffectsSubscription.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    EffectsSubscription.ctorParameters = [\n        { type: undefined, decorators: [{ type: Inject, args: [Store,] },] },\n        { type: EffectsSubscription, decorators: [{ type: Optional }, { type: SkipSelf },] },\n        { type: Array, decorators: [{ type: Optional }, { type: Inject, args: [effects,] },] },\n    ];\n    return EffectsSubscription;\n}(Subscription));\n//# sourceMappingURL=effects-subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/effects-subscription.js\n// module id = ./node_modules/@ngrx/effects/src/effects-subscription.js\n// module chunks = 0","import { merge } from 'rxjs/observable/merge';\nimport { ignoreElements } from 'rxjs/operator/ignoreElements';\nvar METADATA_KEY = '@ngrx/effects';\nexport function Effect(_a) {\n    var dispatch = (_a === void 0 ? { dispatch: true } : _a).dispatch;\n    return function (target, propertyName) {\n        if (!Reflect.hasOwnMetadata(METADATA_KEY, target)) {\n            Reflect.defineMetadata(METADATA_KEY, [], target);\n        }\n        var effects = Reflect.getOwnMetadata(METADATA_KEY, target);\n        var metadata = { propertyName: propertyName, dispatch: dispatch };\n        Reflect.defineMetadata(METADATA_KEY, effects.concat([metadata]), target);\n    };\n}\nexport function getEffectsMetadata(instance) {\n    var target = Object.getPrototypeOf(instance);\n    if (!Reflect.hasOwnMetadata(METADATA_KEY, target)) {\n        return [];\n    }\n    return Reflect.getOwnMetadata(METADATA_KEY, target);\n}\nexport function mergeEffects(instance) {\n    var observables = getEffectsMetadata(instance).map(function (_a) {\n        var propertyName = _a.propertyName, dispatch = _a.dispatch;\n        var observable = typeof instance[propertyName] === 'function' ?\n            instance[propertyName]() : instance[propertyName];\n        if (dispatch === false) {\n            return ignoreElements.call(observable);\n        }\n        return observable;\n    });\n    return merge.apply(void 0, observables);\n}\n//# sourceMappingURL=effects.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/effects.js\n// module id = ./node_modules/@ngrx/effects/src/effects.js\n// module chunks = 0","import { NgModule, Injector, APP_BOOTSTRAP_LISTENER } from '@angular/core';\nimport { Actions } from './actions';\nimport { EffectsSubscription, effects } from './effects-subscription';\nimport { runAfterBootstrapEffects, afterBootstrapEffects } from './bootstrap-listener';\nexport var EffectsModule = (function () {\n    function EffectsModule() {\n    }\n    EffectsModule.run = function (type) {\n        return {\n            ngModule: EffectsModule,\n            providers: [\n                EffectsSubscription,\n                type,\n                { provide: effects, useExisting: type, multi: true }\n            ]\n        };\n    };\n    EffectsModule.runAfterBootstrap = function (type) {\n        return {\n            ngModule: EffectsModule,\n            providers: [\n                type,\n                { provide: afterBootstrapEffects, useExisting: type, multi: true }\n            ]\n        };\n    };\n    EffectsModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        Actions,\n                        EffectsSubscription,\n                        {\n                            provide: APP_BOOTSTRAP_LISTENER,\n                            multi: true,\n                            deps: [Injector, EffectsSubscription],\n                            useFactory: runAfterBootstrapEffects\n                        }\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    EffectsModule.ctorParameters = [];\n    return EffectsModule;\n}());\n//# sourceMappingURL=effects.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/effects.module.js\n// module id = ./node_modules/@ngrx/effects/src/effects.module.js\n// module chunks = 0","export function toPayload(action) {\n    return action.payload;\n}\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/util.js\n// module id = ./node_modules/@ngrx/effects/src/util.js\n// module chunks = 0","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  OnInit\n} from '@angular/core';\n\n@Directive({\n  selector: '[stretch-by-content]'\n})\nexport class StretchByContentDirective implements OnInit {\n  constructor(private el:ElementRef) {\n  }\n\n  ngOnInit():void {\n    this.updateHeight();\n  }\n\n  @HostListener('input') updateHeight() {\n    let element = this.el.nativeElement;\n    element.style.height = '0px';\n    element.style.height = element.scrollHeight + 5 + 'px';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/notes-page/directives/stretch-by-content/stretch-by-content.directive.ts","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'note',\n  template: require('./note.html'),\n  styles: [require('./note.scss')],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class Note {\n  @Input() public isEditingNote:boolean;\n  @Input() public note:any;\n\n  @Output() public onEdit : EventEmitter<any>;\n  @Output() public onRemove : EventEmitter<any>;\n  @Output() public onSave : EventEmitter<any>;\n\n  private noteForm:FormGroup;\n\n  constructor(private fb:FormBuilder) {\n\n    this.onEdit = new EventEmitter<any>();\n    this.onRemove = new EventEmitter<any>();\n    this.onSave = new EventEmitter<any>();\n\n    this.noteForm = this.fb.group({\n      title: ['', [\n        Validators.required\n      ]],\n      description: ['', [\n        Validators.required\n      ]]\n    });\n  }\n\n  editNote(note) {\n    this.onEdit.emit(note);\n    this.noteForm.setValue({\n      title: note.title,\n      description: note.description\n    });\n  }\n\n  removeNote(note) {\n    this.onRemove.emit(note);\n  }\n\n  saveNote(note) {\n    note = Object.assign(note, this.noteForm.getRawValue());\n    this.onSave.emit(note);\n  }\n\n  linksFommatter(text:string){\n    let linkRegexp = /(http[^\\s]+)/g;\n    text = _.escape(text);\n    return text.replace(linkRegexp, `<a href=\"$1\" target=\"_blank\" rel=\"nofollow noopener\" style=\"color: #fff;\">$1</a>`);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/notes-page/note/note.component.ts","module.exports = \"<form [formGroup]=\\\"noteForm\\\"\\n      class=\\\"note-item\\\"\\n      novalidate>\\n\\n  <i class=\\\"glyphicon glyphicon-remove remove-note\\\"\\n     (click)=\\\"removeNote(note)\\\"></i>\\n\\n  <i class=\\\"glyphicon glyphicon-pencil edit-note\\\"\\n     (click)=\\\"editNote(note)\\\"\\n     [hidden]=\\\"isEditingNote\\\"></i>\\n\\n  <i class=\\\"glyphicon glyphicon-floppy-disk save-note\\\"\\n     (click)=\\\"noteForm.valid && saveNote(note)\\\"\\n     [hidden]=\\\"!isEditingNote\\\"\\n     [class.disabled]=\\\"!noteForm.valid\\\"></i>\\n\\n  <div *ngIf=\\\"!isEditingNote\\\">\\n    <h3 class=\\\"note-title\\\">{{note.title}}</h3>\\n    <div class=\\\"note-description\\\" [innerHTML]=\\\"linksFommatter(note.description)\\\"></div>\\n  </div>\\n\\n  <div class=\\\"note-for-edit-cnt\\\"\\n       *ngIf=\\\"isEditingNote\\\">\\n    <h3 class=\\\"note-title\\\">\\n      <input class=\\\"w100 edit-input\\\"\\n             type=\\\"text\\\"\\n             placeholder=\\\"Enter title here...\\\"\\n             [formControl]=\\\"noteForm.controls.title\\\"/>\\n    </h3>\\n    <div class=\\\"note-description\\\">\\n        <textarea class=\\\"w100 mw100 edit-description\\\"\\n                  placeholder=\\\"Enter description here...\\\"\\n                  [formControl]=\\\"noteForm.controls.description\\\"\\n                  stretch-by-content></textarea>\\n    </div>\\n  </div>\\n\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/notes-page/note/note.html\n// module id = ./src/app/pages/notes-page/note/note.html\n// module chunks = 0","module.exports = \".note-item .remove-note {\\n  position: absolute;\\n  top: 5px;\\n  right: 5px;\\n  font-style: normal;\\n  cursor: pointer;\\n  color: #FFFFFF; }\\n\\n.note-item .edit-note {\\n  position: absolute;\\n  top: 5px;\\n  left: 5px;\\n  font-style: normal;\\n  cursor: pointer;\\n  color: #FFFFFF; }\\n\\n.note-item .save-note {\\n  position: absolute;\\n  top: 5px;\\n  left: 5px;\\n  font-style: normal;\\n  cursor: pointer;\\n  color: #FFFFFF; }\\n  .note-item .save-note:disabled, .note-item .save-note[disabled=\\\"disabled\\\"], .note-item .save-note .disabled {\\n    cursor: not-allowed;\\n    opacity: 0.5; }\\n  .note-item .save-note .disabled {\\n    pointer-events: none; }\\n\\n.note-item .note-title .edit-input, .note-item .note-title .edit-description, .note-item .note-description .edit-input, .note-item .note-description .edit-description {\\n  color: #000000; }\\n\\n.note-item .note-title .edit-input, .note-item .note-description .edit-input {\\n  text-align: center; }\\n\\n.note-item .note-title {\\n  margin: 0;\\n  padding: 10px 0;\\n  text-align: center; }\\n\\n.note-item .note-description {\\n  padding: 5px 0; }\\n\\n.note-item div:not(.note-for-edit-cnt) .note-title, .note-item div:not(.note-for-edit-cnt) .note-description {\\n  white-space: pre-wrap;\\n  word-wrap: break-word; }\\n\\na {\\n  color: #FFFFFF !important; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/notes-page/note/note.scss\n// module id = ./src/app/pages/notes-page/note/note.scss\n// module chunks = 0","import {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\n\nimport {Component} from '@angular/core';\n\nimport {Router} from '@angular/router';\n\nimport {Store} from '@ngrx/store';\nimport {Actions} from \"@ngrx/effects\";\n\nimport {StoreService} from '../../shared/services';\nimport {AbstractSmartComponent} from '../../shared/components';\n\nimport {NotesActions} from './notes.actions.ts';\nimport {notesReducer} from './notes-page.reducer.ts';\nimport {AngularFire, FirebaseListObservable} from 'angularfire2';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'notes-page',\n  template: require('./notes-page.html'),\n  styles: [require('./notes-page.scss')]\n})\nexport class NotesPage extends AbstractSmartComponent {\n  private newNoteForm:FormGroup;\n  private static reducers:any;\n  private notesList:FirebaseListObservable<any[]>;\n  private isEditingNote:any;\n\n  static initialize() {\n    NotesPage.reducers = {\n      note: notesReducer\n    };\n  }\n\n  constructor(private fb:FormBuilder,\n              private router:Router,\n              private store:Store<any>,\n              private storeService:StoreService,\n              private noteActions:NotesActions,\n              private actions$:Actions,\n              af:AngularFire) {\n    super(storeService, NotesPage.reducers);\n\n    this.notesList = af.database.list('/todos');\n    this.isEditingNote = {};\n\n    this.newNoteForm = this.fb.group({\n      title: ['', [\n        Validators.required\n      ]],\n      description: ['', [\n        Validators.required\n      ]]\n    });\n  }\n\n  addNote() {\n    let newNote = Object.assign({id: Math.random()}, this.newNoteForm.value);\n    this.notesList.push(newNote);\n    this.newNoteForm.setValue({title:'', description: ''});\n  }\n\n  removeNote(note) {\n    this.notesList.remove(note.$key);\n  }\n\n  editNote(note) {\n    this.isEditingNote[note.id] = true;\n  }\n\n  saveNote(note) {\n    this.isEditingNote[note.id] = false;\n    this.notesList.update(note.$key, _.pick(note, ['id', 'title', 'description']));\n  }\n\n  onInit() {\n  }\n\n  onDestroy() {\n  }\n}\n//instead of static constructor\nNotesPage.initialize();//see also https://basarat.gitbooks.io/typescript/content/docs/tips/staticConstructor.html\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/notes-page/notes-page.component.ts","module.exports = \"<div class=\\\"wh100 notes-page\\\">\\n\\n  <h1 class=\\\"text-center\\\">Notes</h1>\\n\\n  <form [formGroup]=\\\"newNoteForm\\\"\\n        (ngSubmit)=\\\"newNoteForm.valid && addNote()\\\"\\n        class=\\\"input-form w100\\\"\\n        novalidate>\\n    <div class=\\\"title-input-container\\\">\\n      <input type=\\\"text\\\"\\n             class=\\\"title-input w100\\\"\\n             placeholder=\\\"Enter some title here...\\\"\\n             [formControl]=\\\"newNoteForm.controls.title\\\">\\n    </div>\\n    <div class=\\\"description-input-container\\\">\\n      <textarea class=\\\"description-area w100\\\"\\n                [formControl]=\\\"newNoteForm.controls.description\\\"\\n                placeholder=\\\"Enter some description here...\\\"\\n                stretch-by-content></textarea>\\n    </div>\\n    <div class=\\\"buttons-container\\\">\\n      <button class=\\\"btn-add-note\\\"\\n              type=\\\"submit\\\"\\n              [disabled]=\\\"!newNoteForm.valid\\\">\\n        Add!\\n      </button>\\n    </div>\\n  </form>\\n\\n  <div class=\\\"notes-container\\\">\\n    <note *ngFor=\\\"let note of notesList | async\\\"\\n          [note]=\\\"note\\\"\\n          [isEditingNote]=\\\"isEditingNote[note.id]\\\"\\n          (onEdit)=\\\"editNote($event)\\\"\\n          (onRemove)=\\\"removeNote($event)\\\"\\n          (onSave)=\\\"saveNote($event)\\\"></note>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/notes-page/notes-page.html\n// module id = ./src/app/pages/notes-page/notes-page.html\n// module chunks = 0","/**\n * Created by Artur_Nizamutdinov on 10/11/2016.\n */\nimport { NgModule } from '@angular/core';\nimport { NotesPage } from './notes-page.component.ts';\nimport { Note } from './note/note.component';\nimport { StretchByContentDirective } from './directives/stretch-by-content/stretch-by-content.directive';\n\nimport { SharedModule } from './../../shared';\nimport { NotesEffects } from './notes.effects.ts';\nimport { ROUTING } from './notes-page.routing.ts';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NotesActions } from './notes.actions.ts';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ROUTING,\n    EffectsModule.run(NotesEffects)\n  ],\n  declarations: [\n    NotesPage,\n    Note,\n    StretchByContentDirective\n  ],\n  providers: [\n    NotesActions\n  ]\n})\nexport default class NotesPageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/notes-page/notes-page.module.ts","/**\n * Created by Artur_Nizamutdinov on 10/19/2016.\n */\n\nimport { ActionReducer, Action } from '@ngrx/store';\nimport { NotesActions } from './notes.actions.ts';\n\n/*const {\n  LOGIN,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED\n} = NoteActions;*/\n\nconst initialState: any = {};\n\nexport const notesReducer:ActionReducer<any> = (store:Object=initialState, action:Action) => {\n  let payload = action.payload;\n\n  switch (action.type) {\n    /*case LOGIN:\n      return Object.assign({}, store, {\n        userData: new User(payload),\n        isWrongCredentials: false\n      });\n    case LOGIN_SUCCESS:\n      return Object.assign({}, store, {\n        isLoggedIn: true,\n        isWrongCredentials: false\n      });\n    case LOGIN_FAILED:\n      return Object.assign({}, store, {isWrongCredentials: true});*/\n\n    default:\n      return store;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/notes-page/notes-page.reducer.ts","/**\n * Created by Artur_Nizamutdinov on 10/11/2016.\n */\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotesPage } from './notes-page.component.ts';\n\nconst ROUTES: Routes = [\n  {\n    path: '',\n    component: NotesPage,\n    pathMatch: 'full'\n  }\n];\n\nexport const ROUTING = RouterModule.forChild(ROUTES);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/notes-page/notes-page.routing.ts","module.exports = \".input-form {\\n  border: 0;\\n  background: #3949AB;\\n  padding: 15px;\\n  transition: box-shadow 0.2s ease-in;\\n  box-shadow: 0 0 0 transparent; }\\n  .input-form:hover {\\n    box-shadow: 0px 5px 30px 5px rgba(0, 0, 0, 0.6); }\\n  .input-form .title-input-container, .input-form .description-input-container {\\n    margin-bottom: 15px; }\\n  .input-form .title-input {\\n    font-size: 24px;\\n    padding: 10px 15px; }\\n  .input-form .description-area {\\n    font-size: 16px;\\n    padding: 10px 15px;\\n    max-width: 100%; }\\n  .input-form .btn-add-note {\\n    border: 0;\\n    background: #F44336;\\n    color: #FFEBEE;\\n    padding: 10px 15px;\\n    cursor: pointer; }\\n    .input-form .btn-add-note:disabled, .input-form .btn-add-note[disabled=\\\"disabled\\\"], .input-form .btn-add-note .disabled {\\n      cursor: not-allowed;\\n      opacity: 0.5; }\\n    .input-form .btn-add-note .disabled {\\n      pointer-events: none; }\\n\\n.notes-container {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-bottom: 20px; }\\n\\nnote {\\n  width: 100%;\\n  display: inline-block;\\n  background: #663399;\\n  margin-top: 20px;\\n  padding: 10px 15px;\\n  color: #FFFFFF;\\n  position: relative;\\n  vertical-align: top;\\n  transition: box-shadow 0.2s ease-in;\\n  box-shadow: 0 0 0 transparent; }\\n  note:hover {\\n    box-shadow: 0px 5px 30px 5px rgba(0, 0, 0, 0.6); }\\n\\n@media all and (min-width: 520px) and (max-width: 779px) {\\n  note {\\n    width: calc(50% - 10px); }\\n    note:nth-child(even) {\\n      margin-left: 20px; } }\\n\\n@media all and (min-width: 780px) {\\n  note {\\n    width: 240px; }\\n    note:nth-child(3n-1) {\\n      margin: 20px 20px 0; } }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/notes-page/notes-page.scss\n// module id = ./src/app/pages/notes-page/notes-page.scss\n// module chunks = 0","/**\n * Created by Artur_Nizamutdinov on 10/19/2016.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Store, Action} from '@ngrx/store';\n\n@Injectable()\nexport class NotesActions {\n  constructor(private _store:Store<any>) {\n  }\n\n /* static LOGIN = 'LOGIN';\n  login(user:User):Action{\n    return <Action>{\n      type: NoteActions.LOGIN,\n      payload: user\n    };\n  }\n\n  static LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n  loginSuccess():Action{\n    return <Action>{\n      type: NoteActions.LOGIN_SUCCESS\n    };\n  }\n\n  static LOGIN_FAILED = 'LOGIN_FAILED';\n  loginFailed():Action{\n    return <Action>{\n      type: NoteActions.LOGIN_FAILED\n    };\n  }*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/notes-page/notes.actions.ts","/**\n * Created by Artur_Nizamutdinov on 10/19/2016.\n */\nimport {Injectable} from '@angular/core';\nimport {Actions, Effect} from '@ngrx/effects';\nimport {Observable} from 'rxjs/Observable';\nimport {AuthService} from './../../shared/services';\nimport {NotesActions} from './notes.actions.ts';\nimport {User} from './../../shared/entities';\n\n@Injectable()\nexport class NotesEffects {\n  constructor(private actions$: Actions,\n              private authService: AuthService,\n              private loginActions: NotesActions) {\n  }\n\n  /*@Effect() login$ = this.actions$\n  // Listen for the 'LOGIN' action\n    .ofType(NoteActions.LOGIN)\n    .map(action => new User(action.payload))\n    .switchMap(user => this.authService.doNote(user)\n    // If successful, dispatch success action with result\n      .map(() => this.loginActions.loginSuccess())\n      // If request fails, dispatch failed action\n      .catch(() => {\n        return Observable.of(this.loginActions.loginFailed())\n      })\n    );*/\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/@angularclass/hmr-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => mod.__esModule ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/notes-page/notes.effects.ts"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AAUA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;;;;AAAA;AAXA;AAAA;AACA;AACA;;AAAA;AAcA;;AAAA;AAbA;;;;;;;;;;ACVA;AAQA;AAMA;AAQA;AAUA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA9CA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAkDA;;AAAA;AAjDA;;;;;;;;ACtBA;;;;;;;ACAA;;;;;;;;;ACAA;AAMA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAOA;AAAA;AAYA;AAOA;AAPA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AACA;AACA;AACA;AAwBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AA9DA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AA2DA;;AAAA;AA1DA;AA2DA;AACA;;;;;;;;ACvFA;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAiBA;AAAA;AACA;AAhBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AAAA;AADA;AACA;;;;;;;;;AC9BA;;AAEA;;AAKA;;;;AAIA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;;;;;;;;;;;AAWA;AAEA;AACA;AACA;AACA;;;;;;;;;;ACnCA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;ACdA;;;;;;;;ACAA;;AAEA;;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAHA;AAAA;;AAAA;AA2BA;;AAAA;AA1BA;;;;;;;;;;ACRA;;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AALA;AAAA;;AAAA;AAmBA;;AAAA;AAlBA;;;;;","sourceRoot":""}